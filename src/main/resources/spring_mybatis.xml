<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--扫描注解包所在路径-->
    <context:component-scan base-package="net.ltr"/>

    <!--读取数据库链接外部配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--声明数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql_driver}"/>
        <property name="url" value="${mysql_url}"/>
        <property name="username" value="${mysql_user}"/>
        <property name="password" value="${mysql_password}"/>
    </bean>

    <!--构建sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <!--合理化分页：当前页是第一页，上一页不是第0页，当前页是最后一页，下一页还是最后一页-->
                            <prop key="reasonable">true</prop>
                            <!-- 数据库方言：同样都是 SQL 语句，拿到不同数据库中，在语法上会有差异 -->
                            <!-- 默认情况下，按照 MySQL 作为数据库方言来运行 -->
                            <prop key="helperDialect">mysql</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--扫描dao类 将其注册到容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="net.ltr.dao"/>
    </bean>

</beans>